# default config file
# simulation time in minutes
simulation_time=10
parallel_simulation=false
# interval between events (in seconds) set it between 0.1 and 1 (or 2 3 4..) the more it is the less will be the accuracy
update_interval=1
# pause length between iterations (in seconds)
pause_length=3

# display real time charts
display_real_time_charts=true
# close charts when simulation ends 
auto_close_real_time_charts=true
# real time charts refresh interval
charts_update_interval=10
# save charts as bitmap files
save_charts=true

# simulation area/map (meters) 
# remember to update the edge data centers location when you change the map size (in the edge_datacenters.xml file)
length=200
width=200

# wlan range (meters): the distance (radius) in which two devices (or a device and a edge data center) can offload to each others. 
# once a device change its location if it quits this range, the task will be considered as failed due to mobility.
edge_devices_range=10
# be carefull when setting the edge data centers coverage area when the EDGE_ONLY architecture is used,as some tasks may fail (because no resources found)
# so be sure that edge servers cover all the map. except if your scenario requires low coverage area
edge_datacenters_coverage=200

# enable registry 
# true : means that the device will download the application from the registry 
#       after receiving the offloaded tasks ( the container size will be used, see applications.xml file)
# false: the device will execute directly the offloaded task (no container will be downloaded           
enable_registry=false
# CLOUD = default location, you can mirror the container elsewhere programmatically by extending the defaultNetworkModel  
registry_mode=CLOUD

enable_orchestrators=false
# deploy the orchestration node (Options: CLOUD, EDGE, or MIST, you can add your own by editing the  selectOrchestrators() method in DataCentersManager.java)  
# Edge means that every edge device orchestrates its tasks for itself  
deploy_orchestrator=MIST

# end the simulation when the time ends or wait to all the tasks to get executed?
# it better to wait for all the tasks to get executed to get better results, however this may takes hours longer
# disabling this will gives you high tasks failure due to stopping simulation early (see the console) but it will decrease the simulation time
wait_for_all_tasks=true

# log settings
save_log_file=true
clear_output_folder=false
deep_log_enabled=false

# edge devices count
min_number_of_edge_devices=300
max_number_of_edge_devices=300
edge_device_counter_size=100

# enabling this will give more accurate results, but also will increase the simulation duration
realistic_network_model=false
# network update interval (in seconds) transmission update ( 0.1 to 1= better accuracy but it takes longer, 2 or more = less details but faster simulation)
# default=1 (to minimize simulation time)
network_update_interval=1

# If true, all data transferred to the cloud will pass through the same wan link and share the same bandwidth, 
# this can be needed in some scenarios. This also will cause many tasks to fail due to latency. 
# So, you can either increase the wan bandwidth, or adjust the tasks latency sensitivity in applications.xml file.
# When disabled, the the WAN real-time chart will not be displayed.
one_shared_wan_network = true

# network settings   (courtesy of LEAF)
# Latency is used to determine shortest path when rooting + used to decide if tasks have failed due to high latency
# bandwidths in megabits per seconds 
wan_bandwidth = 1000
wan_latency = 0.06
wan_nanojoules_per_bit = 46.7 

man_bandwidth = 1000
man_latency = 0.01
man_nanojoules_per_bit = 0 

wifi_bandwidth = 1300
wifi_device_transmission_nanojoules_per_bit = 283.17
wifi_device_reception_nanojoules_per_bit = 137.01
wifi_access_point_transmission_nanojoules_per_bit = 23.8
wifi_access_point_reception_nanojoules_per_bit = 23.8
wifi_latency = 0.005

ethernet_bandwidth = 1000
ethernet_nanojoules_per_bit = 40000
ethernet_latency = 0.002

# The mobile telecommunication network/ cellular settings (in this case 4g LTE)
cellular_bandwidth = 100
cellular_device_transmission_nanojoules_per_bit = 438.4
cellular_device_reception_nanojoules_per_bit = 51.97
cellular_base_station_nanojoules_per_bit_up_link = 6200
cellular_base_station_nanojoules_per_bit_down_link = 20500
cellular_latency = 0.03

# task orchestration settings
# use ',' for multiple values 
orchestration_architectures=ALL 
#CLOUD_ONLY,EDGE_ONLY,MIST_ONLY,MIST_AND_CLOUD,EDGE_AND_CLOUD,ALL 
# use ',' for multiple values  
orchestration_algorithms=FUZZY_LOGIC,ROUND_ROBIN
#INCREASE_LIFETIME,ROUND_ROBIN,TRADE_OFF