// Block definition (there may be more than one block per file)
FUNCTION_BLOCK tipper

// Define input variables
VAR_INPUT 
    vm_local : REAL;
	vm : REAL;
END_VAR

// Define output variable
VAR_OUTPUT
    offload : REAL;
END_VAR

// Fuzzify input variable 'vm_local'
FUZZIFY vm_local
    TERM low := (0, 1) (20, 1) (40,0) ;
    TERM medium := (30,0) (50,1) (70,0);
    TERM high := (60,0) (80,1)(120,1);
END_FUZZIFY

// Fuzzify input variable 'vm'
FUZZIFY vm
    TERM low := (0, 1) (20, 1) (40,0) ;
    TERM medium := (30,0) (50,1) (70,0);
    TERM high := (60,0) (80,1)(120,1);
END_FUZZIFY

// Defzzzify output variable 'offload'
DEFUZZIFY offload
    TERM yes := (0, 1) (40, 1) (70,0) ; 
    TERM no := (30,0) (60,1)(100,1);
    // Use 'Center Of Gravity' defuzzification method
    METHOD : COG;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

    RULE 1 : IF vm_local IS low AND vm IS high
                THEN offload IS yes;
				
	RULE 2 : IF vm_local IS low AND vm IS high
                THEN offload IS yes;
	
	RULE 3 : IF vm_local IS low AND vm IS medium
                THEN offload IS yes;

END_RULEBLOCK

END_FUNCTION_BLOCK