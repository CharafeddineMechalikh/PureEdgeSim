simulation_time=10 
parallel_simulation=false
update_interval=1

pause_length=0

display_real_time_charts=true
auto_close_real_time_charts=true
charts_update_interval=10
save_charts=false

# We chose a larger simulation area 2000x2000 instead of 200x200 
length=2000
width=2000

edge_devices_range=10

# To ensure that all devices can reach the edge data centers, and that the edge data center can reach one another, we chose a higher value
# By setting it to 1000 we ensure that all the Edge servers cover all the map ( you can chose a higher value)
edge_datacenters_coverage=1000

          
enable_registry=false 
registry_mode=CLOUD


# To enable the edge data centers to work cooperatively, we have to deploy one orchestrator on each edge device
# This means that the tasks will be transferred to the nearest Edge data center, which will decide where it will be executed: on the cloud, 
# on another edge data cetner, or execute it locally on this daat center.
# run the simulation with "enable_orchestrators=true" and then run it with "enable_orchestrators=false" to compare the results
enable_orchestrators=true
# we must set this to EDGE
deploy_orchestrator=EDGE

wait_for_all_tasks=true

save_log_file=false
clear_output_folder=true
deep_log_enabled=false

min_number_of_edge_devices=500
max_number_of_edge_devices=500
edge_device_counter_size=400


# enabling this will give more accurate results, but also will increase the simulation duration
realistic_network_model=false
# network update interval (in seconds) transmission update ( 0.1 to 1= better accuracy but it takes longer, 2 or more = less details but faster simulation)
# default=1 (to minimize simulation time)
network_update_interval=1

# If true, all data transferred to the cloud will pass through the same wan link and share the same bandwidth, 
# this can be needed in some scenarios. This also will cause many tasks to fail due to latency. 
# So, you can either increase the wan bandwidth, or adjust the tasks latency sensitivity in applications.xml file.
# When disabled, the the WAN real-time chart will not be displayed.
one_shared_wan_network = false

# network settings   (courtesy of LEAF)
# Latency is used to determine shortest path when rooting + used to decide if tasks have failed due to high latency
# bandwidths in megabits per seconds 
wan_bandwidth = 1000
wan_latency = 0.06
wan_nanojoules_per_bit = 46.7 

man_bandwidth = 1000
man_latency = 0.01
man_nanojoules_per_bit = 0 

wifi_bandwidth = 1300
wifi_device_transmission_nanojoules_per_bit = 283.17
wifi_device_reception_nanojoules_per_bit = 137.01
wifi_access_point_transmission_nanojoules_per_bit = 23.8
wifi_access_point_reception_nanojoules_per_bit = 23.8
wifi_latency = 0.005

ethernet_bandwidth = 1000
ethernet_nanojoules_per_bit = 40
ethernet_latency = 0.002

# The mobile telecommunication network/ cellular settings (in this case 4g LTE)
cellular_bandwidth = 100
cellular_device_transmission_nanojoules_per_bit = 438.4
cellular_device_reception_nanojoules_per_bit = 51.97
cellular_base_station_nanojoules_per_bit_up_link = 6200
cellular_base_station_nanojoules_per_bit_down_link = 20500
cellular_latency = 0.03


# We select the Edge_and_Cloud architecture in order to execute the tasks on the Cloud or Edge data centers, 
# we will also use the Cloud_only architecture for comparison
orchestration_architectures=EDGE_AND_CLOUD
# The used orchetsration algorithm
orchestration_algorithms=TRADE_OFF